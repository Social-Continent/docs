"use strict";(self.webpackChunksocon_docs=self.webpackChunksocon_docs||[]).push([[2931],{6948:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>_,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var t=o(4848),s=o(8453);const a={},d=void 0,i={id:"hub/messageData",title:"messageData",description:"2.1 Message Data",source:"@site/docs/hub/04_messageData.md",sourceDirName:"hub",slug:"/hub/messageData",permalink:"/hub/messageData",draft:!1,unlisted:!1,editUrl:"https://github.com/Social-Continent/docs/tree/main/docs/hub/04_messageData.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Signing",permalink:"/hub/signing"},next:{title:"User Data",permalink:"/hub/userData"}},r={},c=[{value:"2.1 Message Data",id:"21-message-data",level:2},{value:"MessageData",id:"messagedata",level:3},{value:"Message Types",id:"message-types",level:2}];function m(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"21-message-data",children:"2.1 Message Data"}),"\n",(0,t.jsx)(n.p,{children:"A MessageData encapsulates the content of the Message, which undergoes hashing and signing processes to form the message.\nA MessageData entity comprises essential attributes such as sid, network, timestamp, and type, along with a variable component named body. The structure of the body depends on the specific type of the message."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:"message MessageData {\n MessageType type = 1; // Type of message contained in the body\n uint64 soconId = 2; // Socon ID of the user producing the message\n uint32 timestamp = 3; // Socon epoch timestamp in seconds\n SoconNetwork network = 4; // Socon network the message is intended for\n oneof body {\n   PostAddBody post_add_body = 5;\n   PostRemoveBody post_remove_body = 6;\n   ReactionBody reaction_body = 7;\n   VerificationAddEthAddressBody verification_add_eth_address_body = 9;\n   VerificationRemoveBody verification_remove_body = 10;\n   SignerAddBody signer_add_body = 11;\n   UserDataBody user_data_body = 12;\n   SignerRemoveBody signer_remove_body = 13;\n   LinkBody link_body = 14;\n   UserNameProof username_proof_body = 15;\n   LocationAddBody location_add_body = 16;\n   StoryAddBody story_add_body = 17;\n   StoryRemoveBody story_remove_body = 18;\n   HighlightBody highlight_body = 19;\n   CollectionBody collection_body = 20;\n   AnonymousUserDataBody anonymous_user_data_body = 21;\n   CommunityAddBody community_add_body = 22;\n   CommunityRemoveBody community_remove_body = 23;\n   CommunityMsgAddBody communityMsg_add_body = 24;\n   CommunityMsgRemoveBody communityMsg_remove_body = 25;\n } \n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"messagedata",children:"MessageData"}),"\n",(0,t.jsxs)(n.p,{children:["A MessageData ",(0,t.jsx)(n.code,{children:"data"})," in a Message ",(0,t.jsx)(n.code,{children:"m"})," must pass the following validations:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure that m.data.type corresponds to a valid MessageType."}),"\n",(0,t.jsx)(n.li,{children:"Verify that m.data.sid is an integer greater than or equal to zero."}),"\n",(0,t.jsx)(n.li,{children:"Validate that m.data.timestamp falls within 600 seconds ahead of the current time, adhering to the Socon  epoch timestamp format."}),"\n",(0,t.jsx)(n.li,{children:"Confirm that m.data.network represents a valid Network."}),"\n",(0,t.jsx)(n.li,{children:"Validate that m.data.body conforms to the expected structure for the given message type."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"message-types",children:"Message Types"}),"\n",(0,t.jsx)(n.p,{children:"A MessageType specifies the purpose of a message and the anticipated content within its body. While each MessageType corresponds to a single valid body, a body can be linked to multiple message types."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-protobuf",children:"enum MessageType {\n MESSAGE_TYPE_NONE = 0;\n MESSAGE_TYPE_POST_ADD = 1; // Add a new Post\n MESSAGE_TYPE_POST_REMOVE = 2; // Remove an existing Post\n MESSAGE_TYPE_REACTION_ADD = 3; // Add a Reaction to a Post\n MESSAGE_TYPE_REACTION_REMOVE = 4; // Remove a Reaction from a Post\n MESSAGE_TYPE_LINK_ADD = 5; // Add a new Link\n MESSAGE_TYPE_LINK_REMOVE = 6; // Remove an existing Link\n MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS = 7; // Add a Verification of an Ethereum Address\n MESSAGE_TYPE_VERIFICATION_REMOVE = 8; // Remove a Verification\n MESSAGE_TYPE_SIGNER_ADD = 9; // Add a new Ed25519 key pair that signs messages for a user\n MESSAGE_TYPE_SIGNER_REMOVE = 10; // Remove an Ed25519 key pair that signs messages for a user\n MESSAGE_TYPE_USER_DATA_ADD = 11; // Add metadata about a user\n MESSAGE_TYPE_USERNAME_PROOF = 12; // Add or replace a username proof\n MESSAGE_TYPE_LOCATION_ADD = 13; // add location\n MESSAGE_TYPE_STORY_ADD = 14; // add story\n MESSAGE_TYPE_STORY_REMOVE =15; // remove story\n MESSAGE_TYPE_HIGHLIGHT_ADD = 16; // adding highlight\n MESSAGE_TYPE_HIGHLIGHT_REMOVE = 17; // removing highlight\n MESSAGE_TYPE_COLLECTION_ADD = 18; // adding collection\n MESSAGE_TYPE_COLLECTION_REMOVE = 19; // adding collection\n MESSAGE_TYPE_ANONYMOUS_USER_DATA_ADD = 20;  // adding AnonymousUserData ADD\n MESSAGE_TYPE_COMMUNITY_ADD = 21; // adding community\n MESSAGE_TYPE_COMMUNITY_REMOVE = 22; // removing community\n MESSAGE_TYPE_COMMUNITYMSG_ADD = 23; // adding community msg\n MESSAGE_TYPE_COMMUNITYMSG_REMOVE = 24; // removing community msg\n}\n"})})]})}function _(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>i});var t=o(6540);const s={},a=t.createContext(s);function d(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);